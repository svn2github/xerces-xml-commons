<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE article
  PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
  "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">
<article>
<articleinfo>
<title>org.apache.xml.resolver Release Notes</title>
<subtitle>Version 1.3-dev</subtitle>
<pubdate>June 2008</pubdate>

<copyright>
  <year>2003</year><year>2006</year><year>2008</year>
  <holder>The Apache Software Foundation.</holder>
</copyright>
</articleinfo>

<para>This document offers a brief summary of what has changed in the
<ulink url="http://xml.apache.org/commons/">Apache XML Commons Resolver</ulink>
package. For further information, refer to the commons-dev and commons-cvs mailing lists
and the <ulink url="http://xml.apache.org/commons/changes.html">Changes</ulink> notes.
</para>

<section id="s.v1.3">
<title>Apache XML Commons Resolver v1.3</title>
<section id="s.verbosity">
<title>Always get verbosity from system property xml.catalog.verbosity</title>
<para>
In previous versions, the system property <varname>xml.catalog.verbosity</varname> was
only read if a CatalogManager.properties file did not define a "verbosity" setting. Now this property is always read, and it has precedence.
(Issue: <ulink url="http://issues.apache.org/bugzilla/show_bug.cgi?id=45209">45209</ulink>)
</para>
</section>
</section>

<section id="s.v1.2">
<title>Apache XML Commons Resolver v1.2</title>
<para>
The resolver now supports
systemIdSuffix and uriSuffix as defined in the XML Catalogs v1.1
Committee Specification.
</para>
<para>XCatalog support
(Issue: <ulink url="http://issues.apache.org/bugzilla/show_bug.cgi?id=38562">38562</ulink>)
</para>
<para>
Fixed several bugs including one involving the use of "file: URLs".
</para>
</section>

<section id="s.v1.1">
<title>Apache XML Commons Resolver v1.1</title>
<section id="s.catalogmanager.not.static">
<title>The <classname>CatalogManager</classname> Is No Longer Static</title>

<para>The most pervasive change is that the <classname>CatalogManager</classname>
class is no longer static. It's now possible to instantiate several catalog
managers and each manager can manage several catalogs.</para>

<para>There is still a single static instance of the
<classname>CatalogManager</classname>, available via
<methodname>getStaticManager()</methodname>. This is used by default
if no other catalog manager is instantiated and used. It behaves as
the old static one used to.</para>

</section>

<section id="s.system.cats.loaded">
<title>System Catalogs Are Always Loaded</title>

<para>In the previous version, the system catalogs were not loaded if
a private catalog was requested. That has changed; the system catalogs are now
always loaded.</para>

<para>If you want to avoid loading any system catalogs, establish your own
<classname>CatalogManager</classname> and use the
<methodname>setCatalogsFiles()</methodname> method to assure that no system
catalogs are available.</para>

</section>

<section id="s.tests">
<title>Tests/Examples Available</title>

<para>There are several tests in the <filename>tests/resolver</filename> directory
that demonstrate how different instantiations can be used.</para>

</section>

<section id="s.bootstrap">
<title>Bootstrap resolver for loading catalog files</title>
<para>The resolver now includes catalog.{dtd,rng,xsd} and uses a "bootstrap"
resolver when it is loading catalog files. This avoids the Catch-22 of
having to resolve this before the resolver is in action ...
</para>
<programlisting><![CDATA[
<!DOCTYPE catalog PUBLIC "-//OASIS//DTD XML Catalogs V1.0//EN"
"http://www.oasis-open.org/committees/entity/release/1.0/catalog.dtd">
<catalog>
<public publicId="foo" uri="bar"/>
</catalog>
]]></programlisting>
</section>
</section>

<!--
<section>
<title></title>
<para></para>
</section>
-->

</article>
